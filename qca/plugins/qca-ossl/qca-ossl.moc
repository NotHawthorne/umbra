/****************************************************************************
** Meta object code from reading C++ file 'qca-ossl.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.2.1)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#include <QtCore/qplugin.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'qca-ossl.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.2.1. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
struct qt_meta_stringdata_opensslQCAPlugin__DLGroupMaker_t {
    QByteArrayData data[1];
    char stringdata[32];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    offsetof(qt_meta_stringdata_opensslQCAPlugin__DLGroupMaker_t, stringdata) + ofs \
        - idx * sizeof(QByteArrayData) \
    )
static const qt_meta_stringdata_opensslQCAPlugin__DLGroupMaker_t qt_meta_stringdata_opensslQCAPlugin__DLGroupMaker = {
    {
QT_MOC_LITERAL(0, 0, 30)
    },
    "opensslQCAPlugin::DLGroupMaker\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_opensslQCAPlugin__DLGroupMaker[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

       0        // eod
};

void opensslQCAPlugin::DLGroupMaker::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    Q_UNUSED(_o);
    Q_UNUSED(_id);
    Q_UNUSED(_c);
    Q_UNUSED(_a);
}

const QMetaObject opensslQCAPlugin::DLGroupMaker::staticMetaObject = {
    { &QThread::staticMetaObject, qt_meta_stringdata_opensslQCAPlugin__DLGroupMaker.data,
      qt_meta_data_opensslQCAPlugin__DLGroupMaker,  qt_static_metacall, 0, 0}
};


const QMetaObject *opensslQCAPlugin::DLGroupMaker::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *opensslQCAPlugin::DLGroupMaker::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_opensslQCAPlugin__DLGroupMaker.stringdata))
        return static_cast<void*>(const_cast< DLGroupMaker*>(this));
    return QThread::qt_metacast(_clname);
}

int opensslQCAPlugin::DLGroupMaker::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QThread::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    return _id;
}
struct qt_meta_stringdata_opensslQCAPlugin__MyDLGroup_t {
    QByteArrayData data[3];
    char stringdata[42];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    offsetof(qt_meta_stringdata_opensslQCAPlugin__MyDLGroup_t, stringdata) + ofs \
        - idx * sizeof(QByteArrayData) \
    )
static const qt_meta_stringdata_opensslQCAPlugin__MyDLGroup_t qt_meta_stringdata_opensslQCAPlugin__MyDLGroup = {
    {
QT_MOC_LITERAL(0, 0, 27),
QT_MOC_LITERAL(1, 28, 11),
QT_MOC_LITERAL(2, 40, 0)
    },
    "opensslQCAPlugin::MyDLGroup\0gm_finished\0"
    "\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_opensslQCAPlugin__MyDLGroup[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x08,

 // slots: parameters
    QMetaType::Void,

       0        // eod
};

void opensslQCAPlugin::MyDLGroup::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        MyDLGroup *_t = static_cast<MyDLGroup *>(_o);
        switch (_id) {
        case 0: _t->gm_finished(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject opensslQCAPlugin::MyDLGroup::staticMetaObject = {
    { &DLGroupContext::staticMetaObject, qt_meta_stringdata_opensslQCAPlugin__MyDLGroup.data,
      qt_meta_data_opensslQCAPlugin__MyDLGroup,  qt_static_metacall, 0, 0}
};


const QMetaObject *opensslQCAPlugin::MyDLGroup::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *opensslQCAPlugin::MyDLGroup::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_opensslQCAPlugin__MyDLGroup.stringdata))
        return static_cast<void*>(const_cast< MyDLGroup*>(this));
    return DLGroupContext::qt_metacast(_clname);
}

int opensslQCAPlugin::MyDLGroup::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = DLGroupContext::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_opensslQCAPlugin__RSAKeyMaker_t {
    QByteArrayData data[1];
    char stringdata[31];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    offsetof(qt_meta_stringdata_opensslQCAPlugin__RSAKeyMaker_t, stringdata) + ofs \
        - idx * sizeof(QByteArrayData) \
    )
static const qt_meta_stringdata_opensslQCAPlugin__RSAKeyMaker_t qt_meta_stringdata_opensslQCAPlugin__RSAKeyMaker = {
    {
QT_MOC_LITERAL(0, 0, 29)
    },
    "opensslQCAPlugin::RSAKeyMaker\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_opensslQCAPlugin__RSAKeyMaker[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

       0        // eod
};

void opensslQCAPlugin::RSAKeyMaker::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    Q_UNUSED(_o);
    Q_UNUSED(_id);
    Q_UNUSED(_c);
    Q_UNUSED(_a);
}

const QMetaObject opensslQCAPlugin::RSAKeyMaker::staticMetaObject = {
    { &QThread::staticMetaObject, qt_meta_stringdata_opensslQCAPlugin__RSAKeyMaker.data,
      qt_meta_data_opensslQCAPlugin__RSAKeyMaker,  qt_static_metacall, 0, 0}
};


const QMetaObject *opensslQCAPlugin::RSAKeyMaker::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *opensslQCAPlugin::RSAKeyMaker::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_opensslQCAPlugin__RSAKeyMaker.stringdata))
        return static_cast<void*>(const_cast< RSAKeyMaker*>(this));
    return QThread::qt_metacast(_clname);
}

int opensslQCAPlugin::RSAKeyMaker::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QThread::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    return _id;
}
struct qt_meta_stringdata_opensslQCAPlugin__RSAKey_t {
    QByteArrayData data[3];
    char stringdata[39];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    offsetof(qt_meta_stringdata_opensslQCAPlugin__RSAKey_t, stringdata) + ofs \
        - idx * sizeof(QByteArrayData) \
    )
static const qt_meta_stringdata_opensslQCAPlugin__RSAKey_t qt_meta_stringdata_opensslQCAPlugin__RSAKey = {
    {
QT_MOC_LITERAL(0, 0, 24),
QT_MOC_LITERAL(1, 25, 11),
QT_MOC_LITERAL(2, 37, 0)
    },
    "opensslQCAPlugin::RSAKey\0km_finished\0"
    "\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_opensslQCAPlugin__RSAKey[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x08,

 // slots: parameters
    QMetaType::Void,

       0        // eod
};

void opensslQCAPlugin::RSAKey::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        RSAKey *_t = static_cast<RSAKey *>(_o);
        switch (_id) {
        case 0: _t->km_finished(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject opensslQCAPlugin::RSAKey::staticMetaObject = {
    { &RSAContext::staticMetaObject, qt_meta_stringdata_opensslQCAPlugin__RSAKey.data,
      qt_meta_data_opensslQCAPlugin__RSAKey,  qt_static_metacall, 0, 0}
};


const QMetaObject *opensslQCAPlugin::RSAKey::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *opensslQCAPlugin::RSAKey::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_opensslQCAPlugin__RSAKey.stringdata))
        return static_cast<void*>(const_cast< RSAKey*>(this));
    return RSAContext::qt_metacast(_clname);
}

int opensslQCAPlugin::RSAKey::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = RSAContext::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_opensslQCAPlugin__DSAKeyMaker_t {
    QByteArrayData data[1];
    char stringdata[31];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    offsetof(qt_meta_stringdata_opensslQCAPlugin__DSAKeyMaker_t, stringdata) + ofs \
        - idx * sizeof(QByteArrayData) \
    )
static const qt_meta_stringdata_opensslQCAPlugin__DSAKeyMaker_t qt_meta_stringdata_opensslQCAPlugin__DSAKeyMaker = {
    {
QT_MOC_LITERAL(0, 0, 29)
    },
    "opensslQCAPlugin::DSAKeyMaker\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_opensslQCAPlugin__DSAKeyMaker[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

       0        // eod
};

void opensslQCAPlugin::DSAKeyMaker::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    Q_UNUSED(_o);
    Q_UNUSED(_id);
    Q_UNUSED(_c);
    Q_UNUSED(_a);
}

const QMetaObject opensslQCAPlugin::DSAKeyMaker::staticMetaObject = {
    { &QThread::staticMetaObject, qt_meta_stringdata_opensslQCAPlugin__DSAKeyMaker.data,
      qt_meta_data_opensslQCAPlugin__DSAKeyMaker,  qt_static_metacall, 0, 0}
};


const QMetaObject *opensslQCAPlugin::DSAKeyMaker::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *opensslQCAPlugin::DSAKeyMaker::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_opensslQCAPlugin__DSAKeyMaker.stringdata))
        return static_cast<void*>(const_cast< DSAKeyMaker*>(this));
    return QThread::qt_metacast(_clname);
}

int opensslQCAPlugin::DSAKeyMaker::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QThread::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    return _id;
}
struct qt_meta_stringdata_opensslQCAPlugin__DSAKey_t {
    QByteArrayData data[3];
    char stringdata[39];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    offsetof(qt_meta_stringdata_opensslQCAPlugin__DSAKey_t, stringdata) + ofs \
        - idx * sizeof(QByteArrayData) \
    )
static const qt_meta_stringdata_opensslQCAPlugin__DSAKey_t qt_meta_stringdata_opensslQCAPlugin__DSAKey = {
    {
QT_MOC_LITERAL(0, 0, 24),
QT_MOC_LITERAL(1, 25, 11),
QT_MOC_LITERAL(2, 37, 0)
    },
    "opensslQCAPlugin::DSAKey\0km_finished\0"
    "\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_opensslQCAPlugin__DSAKey[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x08,

 // slots: parameters
    QMetaType::Void,

       0        // eod
};

void opensslQCAPlugin::DSAKey::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        DSAKey *_t = static_cast<DSAKey *>(_o);
        switch (_id) {
        case 0: _t->km_finished(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject opensslQCAPlugin::DSAKey::staticMetaObject = {
    { &DSAContext::staticMetaObject, qt_meta_stringdata_opensslQCAPlugin__DSAKey.data,
      qt_meta_data_opensslQCAPlugin__DSAKey,  qt_static_metacall, 0, 0}
};


const QMetaObject *opensslQCAPlugin::DSAKey::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *opensslQCAPlugin::DSAKey::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_opensslQCAPlugin__DSAKey.stringdata))
        return static_cast<void*>(const_cast< DSAKey*>(this));
    return DSAContext::qt_metacast(_clname);
}

int opensslQCAPlugin::DSAKey::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = DSAContext::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_opensslQCAPlugin__DHKeyMaker_t {
    QByteArrayData data[1];
    char stringdata[30];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    offsetof(qt_meta_stringdata_opensslQCAPlugin__DHKeyMaker_t, stringdata) + ofs \
        - idx * sizeof(QByteArrayData) \
    )
static const qt_meta_stringdata_opensslQCAPlugin__DHKeyMaker_t qt_meta_stringdata_opensslQCAPlugin__DHKeyMaker = {
    {
QT_MOC_LITERAL(0, 0, 28)
    },
    "opensslQCAPlugin::DHKeyMaker\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_opensslQCAPlugin__DHKeyMaker[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

       0        // eod
};

void opensslQCAPlugin::DHKeyMaker::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    Q_UNUSED(_o);
    Q_UNUSED(_id);
    Q_UNUSED(_c);
    Q_UNUSED(_a);
}

const QMetaObject opensslQCAPlugin::DHKeyMaker::staticMetaObject = {
    { &QThread::staticMetaObject, qt_meta_stringdata_opensslQCAPlugin__DHKeyMaker.data,
      qt_meta_data_opensslQCAPlugin__DHKeyMaker,  qt_static_metacall, 0, 0}
};


const QMetaObject *opensslQCAPlugin::DHKeyMaker::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *opensslQCAPlugin::DHKeyMaker::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_opensslQCAPlugin__DHKeyMaker.stringdata))
        return static_cast<void*>(const_cast< DHKeyMaker*>(this));
    return QThread::qt_metacast(_clname);
}

int opensslQCAPlugin::DHKeyMaker::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QThread::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    return _id;
}
struct qt_meta_stringdata_opensslQCAPlugin__DHKey_t {
    QByteArrayData data[3];
    char stringdata[38];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    offsetof(qt_meta_stringdata_opensslQCAPlugin__DHKey_t, stringdata) + ofs \
        - idx * sizeof(QByteArrayData) \
    )
static const qt_meta_stringdata_opensslQCAPlugin__DHKey_t qt_meta_stringdata_opensslQCAPlugin__DHKey = {
    {
QT_MOC_LITERAL(0, 0, 23),
QT_MOC_LITERAL(1, 24, 11),
QT_MOC_LITERAL(2, 36, 0)
    },
    "opensslQCAPlugin::DHKey\0km_finished\0"
    "\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_opensslQCAPlugin__DHKey[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x08,

 // slots: parameters
    QMetaType::Void,

       0        // eod
};

void opensslQCAPlugin::DHKey::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        DHKey *_t = static_cast<DHKey *>(_o);
        switch (_id) {
        case 0: _t->km_finished(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject opensslQCAPlugin::DHKey::staticMetaObject = {
    { &DHContext::staticMetaObject, qt_meta_stringdata_opensslQCAPlugin__DHKey.data,
      qt_meta_data_opensslQCAPlugin__DHKey,  qt_static_metacall, 0, 0}
};


const QMetaObject *opensslQCAPlugin::DHKey::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *opensslQCAPlugin::DHKey::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_opensslQCAPlugin__DHKey.stringdata))
        return static_cast<void*>(const_cast< DHKey*>(this));
    return DHContext::qt_metacast(_clname);
}

int opensslQCAPlugin::DHKey::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = DHContext::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_opensslQCAPlugin__MyCertCollectionContext_t {
    QByteArrayData data[1];
    char stringdata[43];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    offsetof(qt_meta_stringdata_opensslQCAPlugin__MyCertCollectionContext_t, stringdata) + ofs \
        - idx * sizeof(QByteArrayData) \
    )
static const qt_meta_stringdata_opensslQCAPlugin__MyCertCollectionContext_t qt_meta_stringdata_opensslQCAPlugin__MyCertCollectionContext = {
    {
QT_MOC_LITERAL(0, 0, 41)
    },
    "opensslQCAPlugin::MyCertCollectionContext\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_opensslQCAPlugin__MyCertCollectionContext[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

       0        // eod
};

void opensslQCAPlugin::MyCertCollectionContext::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    Q_UNUSED(_o);
    Q_UNUSED(_id);
    Q_UNUSED(_c);
    Q_UNUSED(_a);
}

const QMetaObject opensslQCAPlugin::MyCertCollectionContext::staticMetaObject = {
    { &CertCollectionContext::staticMetaObject, qt_meta_stringdata_opensslQCAPlugin__MyCertCollectionContext.data,
      qt_meta_data_opensslQCAPlugin__MyCertCollectionContext,  qt_static_metacall, 0, 0}
};


const QMetaObject *opensslQCAPlugin::MyCertCollectionContext::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *opensslQCAPlugin::MyCertCollectionContext::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_opensslQCAPlugin__MyCertCollectionContext.stringdata))
        return static_cast<void*>(const_cast< MyCertCollectionContext*>(this));
    return CertCollectionContext::qt_metacast(_clname);
}

int opensslQCAPlugin::MyCertCollectionContext::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = CertCollectionContext::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    return _id;
}
struct qt_meta_stringdata_opensslQCAPlugin__MyMessageContextThread_t {
    QByteArrayData data[1];
    char stringdata[42];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    offsetof(qt_meta_stringdata_opensslQCAPlugin__MyMessageContextThread_t, stringdata) + ofs \
        - idx * sizeof(QByteArrayData) \
    )
static const qt_meta_stringdata_opensslQCAPlugin__MyMessageContextThread_t qt_meta_stringdata_opensslQCAPlugin__MyMessageContextThread = {
    {
QT_MOC_LITERAL(0, 0, 40)
    },
    "opensslQCAPlugin::MyMessageContextThread\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_opensslQCAPlugin__MyMessageContextThread[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

       0        // eod
};

void opensslQCAPlugin::MyMessageContextThread::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    Q_UNUSED(_o);
    Q_UNUSED(_id);
    Q_UNUSED(_c);
    Q_UNUSED(_a);
}

const QMetaObject opensslQCAPlugin::MyMessageContextThread::staticMetaObject = {
    { &QThread::staticMetaObject, qt_meta_stringdata_opensslQCAPlugin__MyMessageContextThread.data,
      qt_meta_data_opensslQCAPlugin__MyMessageContextThread,  qt_static_metacall, 0, 0}
};


const QMetaObject *opensslQCAPlugin::MyMessageContextThread::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *opensslQCAPlugin::MyMessageContextThread::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_opensslQCAPlugin__MyMessageContextThread.stringdata))
        return static_cast<void*>(const_cast< MyMessageContextThread*>(this));
    return QThread::qt_metacast(_clname);
}

int opensslQCAPlugin::MyMessageContextThread::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QThread::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    return _id;
}
struct qt_meta_stringdata_opensslQCAPlugin__MyMessageContext_t {
    QByteArrayData data[3];
    char stringdata[53];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    offsetof(qt_meta_stringdata_opensslQCAPlugin__MyMessageContext_t, stringdata) + ofs \
        - idx * sizeof(QByteArrayData) \
    )
static const qt_meta_stringdata_opensslQCAPlugin__MyMessageContext_t qt_meta_stringdata_opensslQCAPlugin__MyMessageContext = {
    {
QT_MOC_LITERAL(0, 0, 34),
QT_MOC_LITERAL(1, 35, 15),
QT_MOC_LITERAL(2, 51, 0)
    },
    "opensslQCAPlugin::MyMessageContext\0"
    "thread_finished\0\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_opensslQCAPlugin__MyMessageContext[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x08,

 // slots: parameters
    QMetaType::Void,

       0        // eod
};

void opensslQCAPlugin::MyMessageContext::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        MyMessageContext *_t = static_cast<MyMessageContext *>(_o);
        switch (_id) {
        case 0: _t->thread_finished(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject opensslQCAPlugin::MyMessageContext::staticMetaObject = {
    { &MessageContext::staticMetaObject, qt_meta_stringdata_opensslQCAPlugin__MyMessageContext.data,
      qt_meta_data_opensslQCAPlugin__MyMessageContext,  qt_static_metacall, 0, 0}
};


const QMetaObject *opensslQCAPlugin::MyMessageContext::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *opensslQCAPlugin::MyMessageContext::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_opensslQCAPlugin__MyMessageContext.stringdata))
        return static_cast<void*>(const_cast< MyMessageContext*>(this));
    return MessageContext::qt_metacast(_clname);
}

int opensslQCAPlugin::MyMessageContext::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = MessageContext::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_opensslQCAPlugin__opensslInfoContext_t {
    QByteArrayData data[1];
    char stringdata[38];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    offsetof(qt_meta_stringdata_opensslQCAPlugin__opensslInfoContext_t, stringdata) + ofs \
        - idx * sizeof(QByteArrayData) \
    )
static const qt_meta_stringdata_opensslQCAPlugin__opensslInfoContext_t qt_meta_stringdata_opensslQCAPlugin__opensslInfoContext = {
    {
QT_MOC_LITERAL(0, 0, 36)
    },
    "opensslQCAPlugin::opensslInfoContext\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_opensslQCAPlugin__opensslInfoContext[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

       0        // eod
};

void opensslQCAPlugin::opensslInfoContext::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    Q_UNUSED(_o);
    Q_UNUSED(_id);
    Q_UNUSED(_c);
    Q_UNUSED(_a);
}

const QMetaObject opensslQCAPlugin::opensslInfoContext::staticMetaObject = {
    { &InfoContext::staticMetaObject, qt_meta_stringdata_opensslQCAPlugin__opensslInfoContext.data,
      qt_meta_data_opensslQCAPlugin__opensslInfoContext,  qt_static_metacall, 0, 0}
};


const QMetaObject *opensslQCAPlugin::opensslInfoContext::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *opensslQCAPlugin::opensslInfoContext::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_opensslQCAPlugin__opensslInfoContext.stringdata))
        return static_cast<void*>(const_cast< opensslInfoContext*>(this));
    return InfoContext::qt_metacast(_clname);
}

int opensslQCAPlugin::opensslInfoContext::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = InfoContext::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    return _id;
}
struct qt_meta_stringdata_opensslPlugin_t {
    QByteArrayData data[1];
    char stringdata[15];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    offsetof(qt_meta_stringdata_opensslPlugin_t, stringdata) + ofs \
        - idx * sizeof(QByteArrayData) \
    )
static const qt_meta_stringdata_opensslPlugin_t qt_meta_stringdata_opensslPlugin = {
    {
QT_MOC_LITERAL(0, 0, 13)
    },
    "opensslPlugin\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_opensslPlugin[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

       0        // eod
};

void opensslPlugin::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    Q_UNUSED(_o);
    Q_UNUSED(_id);
    Q_UNUSED(_c);
    Q_UNUSED(_a);
}

const QMetaObject opensslPlugin::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_opensslPlugin.data,
      qt_meta_data_opensslPlugin,  qt_static_metacall, 0, 0}
};


const QMetaObject *opensslPlugin::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *opensslPlugin::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_opensslPlugin.stringdata))
        return static_cast<void*>(const_cast< opensslPlugin*>(this));
    if (!strcmp(_clname, "QCAPlugin"))
        return static_cast< QCAPlugin*>(const_cast< opensslPlugin*>(this));
    if (!strcmp(_clname, "com.affinix.qca.Plugin/1.0"))
        return static_cast< QCAPlugin*>(const_cast< opensslPlugin*>(this));
    return QObject::qt_metacast(_clname);
}

int opensslPlugin::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    return _id;
}

QT_PLUGIN_METADATA_SECTION const uint qt_section_alignment_dummy = 42;

#ifdef QT_NO_DEBUG

QT_PLUGIN_METADATA_SECTION
static const unsigned char qt_pluginMetaData[] = {
    'Q', 'T', 'M', 'E', 'T', 'A', 'D', 'A', 'T', 'A', ' ', ' ',
    0x71, 0x62, 0x6a, 0x73, 0x01, 0x00, 0x00, 0x00,
    0xa0, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,
    0x8c, 0x00, 0x00, 0x00, 0x1b, 0x03, 0x00, 0x00,
    0x03, 0x00, 0x49, 0x49, 0x44, 0x00, 0x00, 0x00,
    0x1a, 0x00, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x66,
    0x66, 0x69, 0x6e, 0x69, 0x78, 0x2e, 0x71, 0x63,
    0x61, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
    0x2f, 0x31, 0x2e, 0x30, 0x9b, 0x08, 0x00, 0x00,
    0x09, 0x00, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e,
    0x61, 0x6d, 0x65, 0x00, 0x0d, 0x00, 0x6f, 0x70,
    0x65, 0x6e, 0x73, 0x73, 0x6c, 0x50, 0x6c, 0x75,
    0x67, 0x69, 0x6e, 0x00, 0x3a, 0x40, 0xa0, 0x00,
    0x07, 0x00, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
    0x6e, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
    0x05, 0x00, 0x64, 0x65, 0x62, 0x75, 0x67, 0x00,
    0x15, 0x10, 0x00, 0x00, 0x08, 0x00, 0x4d, 0x65,
    0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x00, 0x00,
    0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00,
    0x70, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
    0x64, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00
};

#else // QT_NO_DEBUG

QT_PLUGIN_METADATA_SECTION
static const unsigned char qt_pluginMetaData[] = {
    'Q', 'T', 'M', 'E', 'T', 'A', 'D', 'A', 'T', 'A', ' ', ' ',
    0x71, 0x62, 0x6a, 0x73, 0x01, 0x00, 0x00, 0x00,
    0xa0, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,
    0x8c, 0x00, 0x00, 0x00, 0x1b, 0x03, 0x00, 0x00,
    0x03, 0x00, 0x49, 0x49, 0x44, 0x00, 0x00, 0x00,
    0x1a, 0x00, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x66,
    0x66, 0x69, 0x6e, 0x69, 0x78, 0x2e, 0x71, 0x63,
    0x61, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
    0x2f, 0x31, 0x2e, 0x30, 0x95, 0x08, 0x00, 0x00,
    0x08, 0x00, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61,
    0x74, 0x61, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x1b, 0x0c, 0x00, 0x00, 0x09, 0x00, 0x63, 0x6c,
    0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x00,
    0x0d, 0x00, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x73,
    0x6c, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x00,
    0x31, 0x00, 0x00, 0x00, 0x05, 0x00, 0x64, 0x65,
    0x62, 0x75, 0x67, 0x00, 0x3a, 0x40, 0xa0, 0x00,
    0x07, 0x00, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
    0x6e, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00,
    0x34, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00,
    0x70, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00
};
#endif // QT_NO_DEBUG

QT_MOC_EXPORT_PLUGIN(opensslPlugin, opensslPlugin)

QT_END_MOC_NAMESPACE
