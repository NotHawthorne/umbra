/****************************************************************************
** Meta object code from reading C++ file 'qca_keystore.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.2.1)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'qca_keystore.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.2.1. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
struct qt_meta_stringdata_QCA__KeyStoreTracker_t {
    QByteArrayData data[33];
    char stringdata[384];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    offsetof(qt_meta_stringdata_QCA__KeyStoreTracker_t, stringdata) + ofs \
        - idx * sizeof(QByteArrayData) \
    )
static const qt_meta_stringdata_QCA__KeyStoreTracker_t qt_meta_stringdata_QCA__KeyStoreTracker = {
    {
QT_MOC_LITERAL(0, 0, 20),
QT_MOC_LITERAL(1, 21, 7),
QT_MOC_LITERAL(2, 29, 0),
QT_MOC_LITERAL(3, 30, 9),
QT_MOC_LITERAL(4, 40, 13),
QT_MOC_LITERAL(5, 54, 5),
QT_MOC_LITERAL(6, 60, 8),
QT_MOC_LITERAL(7, 69, 4),
QT_MOC_LITERAL(8, 74, 9),
QT_MOC_LITERAL(9, 84, 25),
QT_MOC_LITERAL(10, 110, 9),
QT_MOC_LITERAL(11, 120, 10),
QT_MOC_LITERAL(12, 131, 31),
QT_MOC_LITERAL(13, 163, 5),
QT_MOC_LITERAL(14, 169, 7),
QT_MOC_LITERAL(15, 177, 7),
QT_MOC_LITERAL(16, 185, 12),
QT_MOC_LITERAL(17, 198, 10),
QT_MOC_LITERAL(18, 209, 10),
QT_MOC_LITERAL(19, 220, 1),
QT_MOC_LITERAL(20, 222, 14),
QT_MOC_LITERAL(21, 237, 16),
QT_MOC_LITERAL(22, 254, 8),
QT_MOC_LITERAL(23, 263, 11),
QT_MOC_LITERAL(24, 275, 11),
QT_MOC_LITERAL(25, 287, 14),
QT_MOC_LITERAL(26, 302, 13),
QT_MOC_LITERAL(27, 316, 11),
QT_MOC_LITERAL(28, 328, 11),
QT_MOC_LITERAL(29, 340, 18),
QT_MOC_LITERAL(30, 359, 3),
QT_MOC_LITERAL(31, 363, 16),
QT_MOC_LITERAL(32, 380, 2)
    },
    "QCA::KeyStoreTracker\0updated\0\0updated_p\0"
    "spinEventLoop\0start\0provider\0scan\0"
    "entryList\0QList<QCA::KeyStoreEntry>\0"
    "trackerId\0entryTypes\0"
    "QList<QCA::KeyStoreEntry::Type>\0entry\0"
    "storeId\0entryId\0entryPassive\0serialized\0"
    "writeEntry\0v\0QCA::KeyBundle\0"
    "QCA::Certificate\0QCA::CRL\0QCA::PGPKey\0"
    "removeEntry\0updated_locked\0ksl_busyStart\0"
    "ksl_busyEnd\0ksl_updated\0ksl_diagnosticText\0"
    "str\0ksl_storeUpdated\0id\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_QCA__KeyStoreTracker[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      22,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       2,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    0,  124,    2, 0x06,
       3,    0,  125,    2, 0x06,

 // slots: name, argc, parameters, tag, flags
       4,    0,  126,    2, 0x0a,
       5,    0,  127,    2, 0x0a,
       5,    1,  128,    2, 0x0a,
       7,    0,  131,    2, 0x0a,
       8,    1,  132,    2, 0x0a,
      11,    1,  135,    2, 0x0a,
      13,    2,  138,    2, 0x0a,
      16,    1,  143,    2, 0x0a,
      18,    2,  146,    2, 0x0a,
      18,    2,  151,    2, 0x0a,
      18,    2,  156,    2, 0x0a,
      18,    2,  161,    2, 0x0a,
      18,    2,  166,    2, 0x0a,
      24,    2,  171,    2, 0x0a,
      25,    0,  176,    2, 0x08,
      26,    0,  177,    2, 0x08,
      27,    0,  178,    2, 0x08,
      28,    0,  179,    2, 0x08,
      29,    1,  180,    2, 0x08,
      31,    1,  183,    2, 0x08,

 // signals: parameters
    QMetaType::Void,
    QMetaType::Void,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void, QMetaType::QString,    6,
    QMetaType::Void,
    0x80000000 | 9, QMetaType::Int,   10,
    0x80000000 | 12, QMetaType::Int,   10,
    QMetaType::VoidStar, QMetaType::QString, QMetaType::QString,   14,   15,
    QMetaType::VoidStar, QMetaType::QString,   17,
    QMetaType::QString, QMetaType::Int, QMetaType::QVariant,   10,   19,
    QMetaType::QString, QMetaType::Int, 0x80000000 | 20,   10,   19,
    QMetaType::QString, QMetaType::Int, 0x80000000 | 21,   10,   19,
    QMetaType::QString, QMetaType::Int, 0x80000000 | 22,   10,   19,
    QMetaType::QString, QMetaType::Int, 0x80000000 | 23,   10,   19,
    QMetaType::Bool, QMetaType::Int, QMetaType::QString,   10,   15,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void, QMetaType::QString,   30,
    QMetaType::Void, QMetaType::Int,   32,

       0        // eod
};

void QCA::KeyStoreTracker::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        KeyStoreTracker *_t = static_cast<KeyStoreTracker *>(_o);
        switch (_id) {
        case 0: _t->updated(); break;
        case 1: _t->updated_p(); break;
        case 2: _t->spinEventLoop(); break;
        case 3: _t->start(); break;
        case 4: _t->start((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 5: _t->scan(); break;
        case 6: { QList<QCA::KeyStoreEntry> _r = _t->entryList((*reinterpret_cast< int(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QList<QCA::KeyStoreEntry>*>(_a[0]) = _r; }  break;
        case 7: { QList<QCA::KeyStoreEntry::Type> _r = _t->entryTypes((*reinterpret_cast< int(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QList<QCA::KeyStoreEntry::Type>*>(_a[0]) = _r; }  break;
        case 8: { void* _r = _t->entry((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< void**>(_a[0]) = _r; }  break;
        case 9: { void* _r = _t->entryPassive((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< void**>(_a[0]) = _r; }  break;
        case 10: { QString _r = _t->writeEntry((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QVariant(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< QString*>(_a[0]) = _r; }  break;
        case 11: { QString _r = _t->writeEntry((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QCA::KeyBundle(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< QString*>(_a[0]) = _r; }  break;
        case 12: { QString _r = _t->writeEntry((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QCA::Certificate(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< QString*>(_a[0]) = _r; }  break;
        case 13: { QString _r = _t->writeEntry((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QCA::CRL(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< QString*>(_a[0]) = _r; }  break;
        case 14: { QString _r = _t->writeEntry((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QCA::PGPKey(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< QString*>(_a[0]) = _r; }  break;
        case 15: { bool _r = _t->removeEntry((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< bool*>(_a[0]) = _r; }  break;
        case 16: _t->updated_locked(); break;
        case 17: _t->ksl_busyStart(); break;
        case 18: _t->ksl_busyEnd(); break;
        case 19: _t->ksl_updated(); break;
        case 20: _t->ksl_diagnosticText((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 21: _t->ksl_storeUpdated((*reinterpret_cast< int(*)>(_a[1]))); break;
        default: ;
        }
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        switch (_id) {
        default: *reinterpret_cast<int*>(_a[0]) = -1; break;
        case 11:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 1:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< QCA::KeyBundle >(); break;
            }
            break;
        case 12:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 1:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< QCA::Certificate >(); break;
            }
            break;
        case 13:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 1:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< QCA::CRL >(); break;
            }
            break;
        case 14:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 1:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< QCA::PGPKey >(); break;
            }
            break;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        void **func = reinterpret_cast<void **>(_a[1]);
        {
            typedef void (KeyStoreTracker::*_t)();
            if (*reinterpret_cast<_t *>(func) == static_cast<_t>(&KeyStoreTracker::updated)) {
                *result = 0;
            }
        }
        {
            typedef void (KeyStoreTracker::*_t)();
            if (*reinterpret_cast<_t *>(func) == static_cast<_t>(&KeyStoreTracker::updated_p)) {
                *result = 1;
            }
        }
    }
}

const QMetaObject QCA::KeyStoreTracker::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_QCA__KeyStoreTracker.data,
      qt_meta_data_QCA__KeyStoreTracker,  qt_static_metacall, 0, 0}
};


const QMetaObject *QCA::KeyStoreTracker::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *QCA::KeyStoreTracker::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_QCA__KeyStoreTracker.stringdata))
        return static_cast<void*>(const_cast< KeyStoreTracker*>(this));
    return QObject::qt_metacast(_clname);
}

int QCA::KeyStoreTracker::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 22)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 22;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 22)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 22;
    }
    return _id;
}

// SIGNAL 0
void QCA::KeyStoreTracker::updated()
{
    QMetaObject::activate(this, &staticMetaObject, 0, 0);
}

// SIGNAL 1
void QCA::KeyStoreTracker::updated_p()
{
    QMetaObject::activate(this, &staticMetaObject, 1, 0);
}
struct qt_meta_stringdata_QCA__KeyStoreThread_t {
    QByteArrayData data[1];
    char stringdata[21];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    offsetof(qt_meta_stringdata_QCA__KeyStoreThread_t, stringdata) + ofs \
        - idx * sizeof(QByteArrayData) \
    )
static const qt_meta_stringdata_QCA__KeyStoreThread_t qt_meta_stringdata_QCA__KeyStoreThread = {
    {
QT_MOC_LITERAL(0, 0, 19)
    },
    "QCA::KeyStoreThread\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_QCA__KeyStoreThread[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

       0        // eod
};

void QCA::KeyStoreThread::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    Q_UNUSED(_o);
    Q_UNUSED(_id);
    Q_UNUSED(_c);
    Q_UNUSED(_a);
}

const QMetaObject QCA::KeyStoreThread::staticMetaObject = {
    { &SyncThread::staticMetaObject, qt_meta_stringdata_QCA__KeyStoreThread.data,
      qt_meta_data_QCA__KeyStoreThread,  qt_static_metacall, 0, 0}
};


const QMetaObject *QCA::KeyStoreThread::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *QCA::KeyStoreThread::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_QCA__KeyStoreThread.stringdata))
        return static_cast<void*>(const_cast< KeyStoreThread*>(this));
    return SyncThread::qt_metacast(_clname);
}

int QCA::KeyStoreThread::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = SyncThread::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    return _id;
}
struct qt_meta_stringdata_QCA__KeyStoreEntryWatcher__Private_t {
    QByteArrayData data[6];
    char stringdata[86];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    offsetof(qt_meta_stringdata_QCA__KeyStoreEntryWatcher__Private_t, stringdata) + ofs \
        - idx * sizeof(QByteArrayData) \
    )
static const qt_meta_stringdata_QCA__KeyStoreEntryWatcher__Private_t qt_meta_stringdata_QCA__KeyStoreEntryWatcher__Private = {
    {
QT_MOC_LITERAL(0, 0, 34),
QT_MOC_LITERAL(1, 35, 13),
QT_MOC_LITERAL(2, 49, 0),
QT_MOC_LITERAL(3, 50, 8),
QT_MOC_LITERAL(4, 59, 10),
QT_MOC_LITERAL(5, 70, 14)
    },
    "QCA::KeyStoreEntryWatcher::Private\0"
    "ksm_available\0\0_storeId\0ks_updated\0"
    "ks_unavailable\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_QCA__KeyStoreEntryWatcher__Private[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       3,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    1,   29,    2, 0x08,
       4,    0,   32,    2, 0x08,
       5,    0,   33,    2, 0x08,

 // slots: parameters
    QMetaType::Void, QMetaType::QString,    3,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void QCA::KeyStoreEntryWatcher::Private::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        Private *_t = static_cast<Private *>(_o);
        switch (_id) {
        case 0: _t->ksm_available((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 1: _t->ks_updated(); break;
        case 2: _t->ks_unavailable(); break;
        default: ;
        }
    }
}

const QMetaObject QCA::KeyStoreEntryWatcher::Private::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_QCA__KeyStoreEntryWatcher__Private.data,
      qt_meta_data_QCA__KeyStoreEntryWatcher__Private,  qt_static_metacall, 0, 0}
};


const QMetaObject *QCA::KeyStoreEntryWatcher::Private::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *QCA::KeyStoreEntryWatcher::Private::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_QCA__KeyStoreEntryWatcher__Private.stringdata))
        return static_cast<void*>(const_cast< Private*>(this));
    return QObject::qt_metacast(_clname);
}

int QCA::KeyStoreEntryWatcher::Private::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 3)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 3;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 3)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 3;
    }
    return _id;
}
struct qt_meta_stringdata_QCA__KeyStoreOperation_t {
    QByteArrayData data[1];
    char stringdata[24];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    offsetof(qt_meta_stringdata_QCA__KeyStoreOperation_t, stringdata) + ofs \
        - idx * sizeof(QByteArrayData) \
    )
static const qt_meta_stringdata_QCA__KeyStoreOperation_t qt_meta_stringdata_QCA__KeyStoreOperation = {
    {
QT_MOC_LITERAL(0, 0, 22)
    },
    "QCA::KeyStoreOperation\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_QCA__KeyStoreOperation[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

       0        // eod
};

void QCA::KeyStoreOperation::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    Q_UNUSED(_o);
    Q_UNUSED(_id);
    Q_UNUSED(_c);
    Q_UNUSED(_a);
}

const QMetaObject QCA::KeyStoreOperation::staticMetaObject = {
    { &QThread::staticMetaObject, qt_meta_stringdata_QCA__KeyStoreOperation.data,
      qt_meta_data_QCA__KeyStoreOperation,  qt_static_metacall, 0, 0}
};


const QMetaObject *QCA::KeyStoreOperation::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *QCA::KeyStoreOperation::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_QCA__KeyStoreOperation.stringdata))
        return static_cast<void*>(const_cast< KeyStoreOperation*>(this));
    return QThread::qt_metacast(_clname);
}

int QCA::KeyStoreOperation::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QThread::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    return _id;
}
struct qt_meta_stringdata_QCA__KeyStorePrivate_t {
    QByteArrayData data[3];
    char stringdata[35];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    offsetof(qt_meta_stringdata_QCA__KeyStorePrivate_t, stringdata) + ofs \
        - idx * sizeof(QByteArrayData) \
    )
static const qt_meta_stringdata_QCA__KeyStorePrivate_t qt_meta_stringdata_QCA__KeyStorePrivate = {
    {
QT_MOC_LITERAL(0, 0, 20),
QT_MOC_LITERAL(1, 21, 11),
QT_MOC_LITERAL(2, 33, 0)
    },
    "QCA::KeyStorePrivate\0op_finished\0\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_QCA__KeyStorePrivate[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x08,

 // slots: parameters
    QMetaType::Void,

       0        // eod
};

void QCA::KeyStorePrivate::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        KeyStorePrivate *_t = static_cast<KeyStorePrivate *>(_o);
        switch (_id) {
        case 0: _t->op_finished(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject QCA::KeyStorePrivate::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_QCA__KeyStorePrivate.data,
      qt_meta_data_QCA__KeyStorePrivate,  qt_static_metacall, 0, 0}
};


const QMetaObject *QCA::KeyStorePrivate::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *QCA::KeyStorePrivate::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_QCA__KeyStorePrivate.stringdata))
        return static_cast<void*>(const_cast< KeyStorePrivate*>(this));
    return QObject::qt_metacast(_clname);
}

int QCA::KeyStorePrivate::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_QCA__KeyStoreManagerPrivate_t {
    QByteArrayData data[4];
    char stringdata[53];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    offsetof(qt_meta_stringdata_QCA__KeyStoreManagerPrivate_t, stringdata) + ofs \
        - idx * sizeof(QByteArrayData) \
    )
static const qt_meta_stringdata_QCA__KeyStoreManagerPrivate_t qt_meta_stringdata_QCA__KeyStoreManagerPrivate = {
    {
QT_MOC_LITERAL(0, 0, 27),
QT_MOC_LITERAL(1, 28, 15),
QT_MOC_LITERAL(2, 44, 0),
QT_MOC_LITERAL(3, 45, 6)
    },
    "QCA::KeyStoreManagerPrivate\0tracker_updated\0"
    "\0update\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_QCA__KeyStoreManagerPrivate[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       2,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   24,    2, 0x0a,
       3,    0,   25,    2, 0x0a,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void QCA::KeyStoreManagerPrivate::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        KeyStoreManagerPrivate *_t = static_cast<KeyStoreManagerPrivate *>(_o);
        switch (_id) {
        case 0: _t->tracker_updated(); break;
        case 1: _t->update(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject QCA::KeyStoreManagerPrivate::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_QCA__KeyStoreManagerPrivate.data,
      qt_meta_data_QCA__KeyStoreManagerPrivate,  qt_static_metacall, 0, 0}
};


const QMetaObject *QCA::KeyStoreManagerPrivate::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *QCA::KeyStoreManagerPrivate::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_QCA__KeyStoreManagerPrivate.stringdata))
        return static_cast<void*>(const_cast< KeyStoreManagerPrivate*>(this));
    return QObject::qt_metacast(_clname);
}

int QCA::KeyStoreManagerPrivate::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 2)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 2;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 2)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 2;
    }
    return _id;
}
QT_END_MOC_NAMESPACE
